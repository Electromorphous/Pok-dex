{"version":3,"sources":["components/Header.jsx","components/PokemonCard.jsx","components/Content.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","breakpoints","up","height","appBarClass","backgroundColor","title","display","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","spacing","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","inputText","setInputText","classes","className","AppBar","Toolbar","Grid","container","item","xs","sm","Typography","variant","noWrap","md","InputBase","value","onChange","e","target","placeholder","input","inputProps","card","cardActionArea","pokemonName","textAlign","textTransform","PokemonCard","pokemon","imageURL","id","Card","elevation","CardActionArea","CardMedia","component","alt","name","src","CardContent","gutterBottom","Content","useState","pokemons","setPokemons","a","fetch","json","then","res","pok","results","map","url","substring","length","useEffect","fetchData","filteredPokemons","filter","includes","toLowerCase","justify","key","getPokemonCard","App","direction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.840c7e3b.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 20,\r\n    [theme.breakpoints.up('xs')]: {\r\n      height: 90\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 60\r\n    }\r\n  },\r\n  appBarClass: {\r\n    backgroundColor: '#de3131',\r\n    [theme.breakpoints.up('xs')]: {\r\n      height: 90\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 60\r\n    }\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'block'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto'\r\n    }\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '6ch',\r\n      '&:focus': {\r\n        width: '8ch'\r\n      }\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '8ch',\r\n      '&:focus': {\r\n        width: '10ch'\r\n      }\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '10ch',\r\n      '&:focus': {\r\n        width: '20ch'\r\n      }\r\n    },\r\n    paddingRight: theme.spacing(15)\r\n  }\r\n}))\r\n\r\nexport default function SearchAppBar({inputText, setInputText}) {\r\n  const classes = useStyles();\r\n\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBarClass}>\r\n        <Toolbar>\r\n          <Grid container>\r\n            {/* left padding */}\r\n            <Grid item xs={2} sm={1} />\r\n\r\n            <Grid item xs={10} sm={3}>\r\n              <Typography className={classes.title} variant=\"h4\" noWrap>\r\n                Pokédex\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={2} md={3} />\r\n\r\n            <Grid item>\r\n              <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                  <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                  value={inputText}\r\n                  onChange={inputTextHandler}\r\n                  placeholder=\"Search…\"\r\n                  classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput\r\n                  }}\r\n                  inputProps={{ 'aria-label': 'search' }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n\r\n            {/* right padding */}\r\n            <Grid item xs={2} sm={1} />\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    borderRadius: 17,\r\n    height: 300,\r\n    '&:hover': {\r\n      backgroundColor: '#eee'\r\n    }\r\n  },\r\n  cardActionArea: {\r\n    height: 300\r\n  },\r\n  pokemonName: {\r\n    textAlign: 'center',\r\n    textTransform: 'capitalize'\r\n  }\r\n}))\r\n\r\nexport default function PokemonCard({ pokemon }) {\r\n  const classes = useStyles()\r\n  const imageURL = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${\r\n    pokemon.id\r\n  }.svg`\r\n  return (\r\n    <Card className={classes.card} elevation={3}>\r\n      <CardActionArea className={classes.cardActionArea}>\r\n        {/* <div className=\"pokemonImageDiv\"> */}\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={pokemon.name}\r\n          height=\"250\"\r\n          src={imageURL}\r\n          title=\"Pokemon image\"\r\n        />\r\n        {/* </div> */}\r\n        <CardContent>\r\n          <Typography gutterBottom className={classes.pokemonName}>\r\n            {pokemon.name}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport PokemonCard from './PokemonCard.jsx'\r\n\r\nexport default function Content({inputText}) {\r\n  const [pokemons, setPokemons] = useState([])\r\n\r\n  async function fetchData() {\r\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=80\");\r\n    res\r\n      .json()\r\n      .then(res => {\r\n        const pok = res.results.map(pokemon => {\r\n          const { url } = pokemon\r\n          const id = url.substring(34, url.length - 1)\r\n\r\n          return {\r\n            ...pokemon,\r\n            id\r\n          }\r\n        })\r\n\r\n        setPokemons(pok)}\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  });\r\n  \r\n  const getPokemonCard = pokemon => {\r\n    return (\r\n      <Grid item xs={12} sm={6} md={3} key={pokemon.id}>\r\n        <PokemonCard pokemon={pokemon} />\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const filteredPokemons = pokemons.filter(pokemon => pokemon.name.includes(inputText.toLowerCase()) )\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* left padding */}\r\n      <Grid item xs={1} />\r\n\r\n      {/* content */}\r\n      <Grid item container xs={10} spacing={3} justify=\"center\">\r\n        {/* <Grid item xs={12} sm={6} md={3}>\r\n          <PokemonCard pokemon={pokmon} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <PokemonCard />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <PokemonCard />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <PokemonCard />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <PokemonCard />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <PokemonCard />\r\n        </Grid> */}\r\n\r\n        {filteredPokemons.map(pokemon => {\r\n          return getPokemonCard(pokemon)\r\n        })}\r\n      </Grid>\r\n\r\n      {/* right padding */}\r\n      <Grid item xs={1} />\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Header from \"./components/Header.jsx\";\r\nimport Content from \"./components/Content.jsx\";\r\n\r\nexport default function App() {\r\n  // const [isLoading, setIsLoading] = useState(false)\r\n  // const [searchString, setSearchString] = useState('')\r\n  // const [pokemons, setPokemons] = useState([])\r\n  // const [error, setError] = useState(null)\r\n\r\n  // useEffect(() => {\r\n  //   const searchString = hardtack.get('searchString') || ''\r\n  //   setIsLoading(true)\r\n  //   setSearchString(searchString)\r\n  // }, [])\r\n\r\n  // api\r\n  //   .getPokemons()\r\n  //   .then(pokemons => {\r\n  //     setPokemons(pokemons)\r\n  //   })\r\n  //   .catch(error => {\r\n  //     setError(error.message)\r\n  //   })\r\n  //   .finally(() => {\r\n  //     setIsLoading(false)\r\n  //   })\r\n\r\n  // ga.pageview(window.location.pathname + window.location.search)\r\n\r\n  // const handleSearchChange = event => {\r\n  //   const value = event.currentTarget.value.toLowerCase().trim()\r\n\r\n  //   hardtack.set('searchString', value, {\r\n  //     maxAge: '31536000'\r\n  //   })\r\n\r\n  //   setSearchString(value)\r\n  // }\r\n\r\n  // const renderPokemonList = () => {\r\n  //   const pokemonList = []\r\n\r\n  //   pokemons.forEach(pokemon => {\r\n  //     if (!pokemon.name.includes(searchString)) {\r\n  //       return\r\n  //     }\r\n\r\n  //     pokemonList.push(\r\n  //       <li className=\"pokemons__item\" key={pokemon.id}>\r\n  //         <Pokemon pokemon={pokemon} />\r\n  //       </li>\r\n  //     )\r\n  //   })\r\n\r\n  // return <ul className=\"pokemons\">{pokemonList}</ul>\r\n  // }\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  return (\r\n    // <div className=\"page\">\r\n    //   {error && <div className=\"page__error\">{error}</div>}\r\n    //   <div className=\"page__search\">\r\n    //     <Search onChange={handleSearchChange} value={searchString} />\r\n    //   </div>\r\n    //   {isLoading ? <p>Loading...</p> : renderPokemonList()}\r\n    // </div>\r\n\r\n    <Grid container direction=\"column\">\r\n      <Grid item xs={12}>\r\n        <Header inputText={inputText} setInputText={setInputText} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Content inputText={inputText} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.jsx'\r\nimport './CSS/main.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}